{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qumailrafiq/Desktop/todo/pages/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { useState } from 'react';\nimport { Button } from 'antd';\n\nconst Todo = () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 20\n}, this);\n\nexport default Todo;\n\n() => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]);\n  const {\n    0: todo,\n    1: setTodo\n  } = useState('');\n\n  const removeTodo = todo => {\n    setTodos(todos.filter(t => t !== todo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: todo,\n      onChange: e => setTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setTodos([...todos, todo]),\n      type: \"primary\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTodo(todo),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true);\n};\n\nrender( /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 8\n}, this), mountNode);","map":{"version":3,"sources":["/Users/qumailrafiq/Desktop/todo/pages/index.js"],"names":["React","render","useState","Button","Todo","todos","setTodos","todo","setTodo","removeTodo","filter","t","e","target","value","map","mountNode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,MAAMC,IAAI,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA,QAAnB;;AACA,eAAeA,IAAf;;AAAqB,MAAM;AACvB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM;AAAA,OAAEK,IAAF;AAAA,OAASC;AAAT,MAAqBN,QAAQ,CAAC,EAAD,CAAnC;;AACA,QAAMO,UAAU,GAAGF,IAAI,IAAI;AACvBD,IAAAA,QAAQ,CAACD,KAAK,CAACK,MAAN,CAAaC,CAAC,IAAIA,CAAC,KAAKJ,IAAxB,CAAD,CAAR;AACH,GAFD;;AAGI,sBACI;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEA,IAAd;AAAoB,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUE,IAAV,CAAD,CAA/B;AAAmD,MAAA,IAAI,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,KAAK,CAACU,GAAN,CAAUR,IAAI,iBACX;AAAA,8BACA;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,MAAME,UAAU,CAACF,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADH,CAHH;AAAA,kBADJ;AAYP,CAlBoB;;AAoBrBN,MAAM,eAAC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAUe,SAAV,CAAN","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport { useState } from 'react';\nimport { Button } from 'antd';\n\nconst Todo = () => <div />;\nexport default Todo; () => {\n    const [ todos, setTodos] = useState([]);\n    const [ todo , setTodo ] = useState(''); \n    const removeTodo = todo => {\n        setTodos(todos.filter(t => t !== todo));\n    }\n        return (\n            <>\n              <input value={todo} onChange={(e) => setTodo(e.target.value)} />\n              <Button onClick={() => setTodos([...todos,todo ])} type=\"primary\">Add</Button>\n              {todos.map(todo =>(\n                  <>\n                  <h1>{todo}</h1>\n                  <button onClick={() => removeTodo(todo)}>Remove</button>\n                  </>\n              ))}\n              </> \n        ); \n}\n\nrender(<Todo/>, mountNode,);"]},"metadata":{},"sourceType":"module"}